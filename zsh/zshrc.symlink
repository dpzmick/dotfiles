# load colors
autoload -U colors zsh-mime-setup
colors

################################################################################
#                                vim mode stuff                                #
################################################################################
# use vim keybindings
bindkey -v
bindkey jk vi-cmd-mode # make jk escape

# some keybindings I'll probably never use
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

# some stuff to get the prompt nice
vim_ins_mode="%{$fg[cyan]%}$"
vim_cmd_mode="%{$fg[cyan]%}>%{$reset_color%}"
vim_mode=$vim_ins_mode

function zle-keymap-select {
    setopt localoptions no_ksharrays
    [[ "${@[2]-}" == opp ]] && return
    vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
    zle reset-prompt
}
zle -N zle-keymap-select

function zle-line-finish {
    vim_mode=$vim_ins_mode
}
zle -N zle-line-finish

################################################################################
#                                 completions                                  #
################################################################################
autoload compinit
compinit -C

zstyle ':completion::complete:*' use-cache on               # completion caching, use rehash to clear
zstyle ':completion:*' cache-path ~/.zsh/cache              # cache path
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'   # ignore case
zstyle ':completion:*' menu select=2                        # menu if nb items > 2
#zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}       # colorz !
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==34=34}:${(s.:.)LS_COLORS}")'
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate # list of completers to use

# sections completion !
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format $'\e[00;34m%d'
zstyle ':completion:*:messages' format $'\e[00;31m%d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:manuals' separate-sections true

zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:*:kill:*:processes' list-colors "=(#b) #([0-9]#)*=29=34"
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*' force-list always
zstyle ':completion:*' users $users

# be able to use shift tab
bindkey '^[[Z' reverse-menu-complete


################################################################################
#                            various other settings                            #
################################################################################
# go to directories without typing cd
setopt autocd
# correct me
setopt correct
# always push directories to dir stack
setopt auto_pushd
setopt pushd_ignore_dups        # no duplicates in dir stack
setopt pushd_silent             # no dir stack after pushd or popd
setopt pushd_to_home            # `pushd` = `pushd $HOME`

################################################################################
#                                   history                                    #
################################################################################
HISTFILE=~/.zsh_history         # where to store zsh config
HISTSIZE=1024                   # big history
SAVEHIST=1024                   # big history
setopt append_history           # append
setopt hist_ignore_all_dups     # no duplicate
setopt hist_ignore_space        # ignore space prefixed commands
setopt hist_reduce_blanks       # trim blanks
setopt hist_verify              # show before executing history commands
setopt inc_append_history       # add commands as they are typed, don't wait until shell exit
setopt share_history            # share hist between sessions
setopt bang_hist                # !keyword

# to get things ignored in history we need to do this trick
for c (ls fg bj jobs exit clear reset) do
    alias $c=" $c";
done

# use the OS time, not zsh
disable -r time
alias time='time -p ' # -p for POSIX output

################################################################################
#                                    prompt                                    #
################################################################################
# some git thing I found on the internet
function __git_prompt {
  local DIRTY="%{$fg[yellow]%} git:"
  local CLEAN="%{$fg[green]%} git:"
  local UNMERGED="%{$fg[red]%} git:"
  local RESET="%{$terminfo[sgr0]%}"
  git rev-parse --git-dir >& /dev/null
  if [[ $? == 0 ]]
  then
    if [[ `git ls-files -u >& /dev/null` == '' ]]
    then
      git diff --quiet >& /dev/null
      if [[ $? == 1 ]]
      then
        echo -n $DIRTY
      else
        git diff --cached --quiet >& /dev/null
        if [[ $? == 1 ]]
        then
          echo -n $DIRTY
        else
          echo -n $CLEAN
        fi
      fi
    else
      echo -n $UNMERGED
    fi
    echo -n `git branch | grep '* ' | sed 's/..//'`
    echo -n $RESET
  fi
}

# idk something funky
setopt promptsubst
setopt promptpercent
# add the opening brace
PROMPT=$'%{$fg[cyan]%}[ %{$fg[magenta]%}%T%{$fg[yellow]%}$(__git_prompt) %{$fg[magenta]%}%m:'
PROMPT+=$'%{$fg[yellow]%}${PWD/$HOME/~}%{$fg[cyan]%} ]'
# print the $ and reset the color
PROMPT+=$'\n%{$fg[cyan]%}$vim_mode%{$reset_color%} '

# load aliases
source ~/.alias

function empty-buffer-to-ls() {
    if [[ $#BUFFER == 0 ]]; then
        BUFFER="l"
    fi
}
# set special widget, see man zshzle
zle -N zle-line-finish empty-buffer-to-ls

export NVM_DIR="/home/dpzmick/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# OPAM configuration
. /home/dpzmick/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# The next line updates PATH for the Google Cloud SDK.
source '/home/dpzmick/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
source '/home/dpzmick/google-cloud-sdk/completion.zsh.inc'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
